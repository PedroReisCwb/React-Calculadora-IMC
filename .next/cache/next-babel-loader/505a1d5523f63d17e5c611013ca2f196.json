{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Bibliotecas\\\\Pedro\\\\Downloads\\\\Estudos\\\\React\\\\react_nextjs\\\\components\\\\calculator\\\\index.js\";\nimport { useState } from 'react';\nimport { Container, Grid, Typography, TextField, Button } from '@material-ui/core';\nimport styles from './Calculator.module.scss';\n\nfunction Calculator() {\n  const {\n    0: altura,\n    1: setAltura\n  } = useState(0);\n  const {\n    0: peso,\n    1: setPeso\n  } = useState(0);\n  const {\n    0: imc,\n    1: setImc\n  } = useState();\n\n  const calculateImc = () => {\n    const alturam = altura / 100;\n    setImc((peso / (alturam * alturam)).toFixed(2));\n  };\n\n  const verifyImc = () => {\n    if (imc < 18.5) return \"Abaixo do peso\";\n    if (imc < 24.9) return \"Peso normal\";\n    if (imc < 29.9) return \"Sobrepeso\";\n    if (imc < 34.9) return \"Obesidade grau 1\";\n    if (imc < 39.9) return \"Obesidade grau 2\";\n    return \"Obesidade grau 3\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.calculator,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Calculadora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Altura em cm\",\n            variant: \"filled\",\n            fullWidth: true,\n            type: \"number\",\n            value: altura,\n            onChange: ({\n              target\n            }) => setAltura(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Peso em kg\",\n            variant: \"filled\",\n            fullWidth: true,\n            type: \"number\",\n            value: peso,\n            onChange: ({\n              target\n            }) => setPeso(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            onClick: () => calculateImc(),\n            children: \"Calcular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), imc && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"O seu IMC \\xE9: \", imc, \" kg/m2 - \", verifyImc()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Calculator;","map":{"version":3,"sources":["D:/Bibliotecas/Pedro/Downloads/Estudos/React/react_nextjs/components/calculator/index.js"],"names":["useState","Container","Grid","Typography","TextField","Button","styles","Calculator","altura","setAltura","peso","setPeso","imc","setImc","calculateImc","alturam","toFixed","verifyImc","calculator","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { Container, Grid, Typography, TextField, Button } from '@material-ui/core'\r\n\r\nimport styles from './Calculator.module.scss'\r\n\r\nfunction Calculator () {\r\n    const [altura, setAltura] = useState(0)\r\n    const [peso, setPeso] = useState(0)\r\n    const [imc, setImc] = useState()\r\n\r\n    const calculateImc = () => {\r\n        const alturam = altura/100\r\n        setImc((peso/(alturam*alturam)).toFixed(2))\r\n    }\r\n\r\n    const verifyImc = () => {\r\n        if (imc < 18.5) return \"Abaixo do peso\"\r\n        if (imc < 24.9) return \"Peso normal\"\r\n        if (imc < 29.9) return \"Sobrepeso\"\r\n        if (imc < 34.9) return \"Obesidade grau 1\"\r\n        if (imc < 39.9) return \"Obesidade grau 2\"\r\n        return \"Obesidade grau 3\"\r\n    }\r\n\r\n    return (\r\n        <div className={styles.calculator}>\r\n            <Container maxWidth=\"xs\">\r\n                <Typography variant=\"h3\">Calculadora</Typography>\r\n                <Grid container direction=\"column\" spacing={2}>\r\n                    <Grid item>\r\n                        <TextField label=\"Altura em cm\" variant=\"filled\" fullWidth type=\"number\" value={altura} onChange={({ target }) => setAltura(target.value)} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField label=\"Peso em kg\" variant=\"filled\" fullWidth type=\"number\" value={peso} onChange={({ target }) => setPeso(target.value)} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" color=\"primary\" fullWidth onClick={() => calculateImc()}>Calcular</Button>\r\n                    </Grid>\r\n                    {\r\n                        imc &&\r\n                        <Grid item>\r\n                            <Typography>O seu IMC Ã©: {imc} kg/m2 - {verifyImc()}</Typography>\r\n                        </Grid>\r\n                    }                   \r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculator"]},"metadata":{},"sourceType":"module"}